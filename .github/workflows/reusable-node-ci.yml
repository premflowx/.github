name: Reusable Node CI
on:
  workflow_call:
    inputs:
      node-version: { type: string, default: '22' }
      run-build:   { type: boolean, default: true }
      run-tests:   { type: boolean, default: false }
      environment: { type: string,  default: 'staging' }
    secrets:
      BREVO_API_KEY:       { required: false }
      GHSE_API_KEY:        { required: false }
      N8N_DEPLOY_HOOK_URL: { required: false }

jobs:
  ci:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - uses: actions/checkout@v4

      - name: Detect Node project
        id: detect
        run: |
          if [ -f package.json ]; then
            echo "has_node=true" >> $GITHUB_OUTPUT
          else
            echo "has_node=false" >> $GITHUB_OUTPUT
          fi

      - uses: actions/setup-node@v4
        if: steps.detect.outputs.has_node == 'true'
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'npm'

      - name: Install
        if: steps.detect.outputs.has_node == 'true'
        run: npm ci || npm i

      - name: Lint
        if: steps.detect.outputs.has_node == 'true'
        run: npm run lint --if-present

      - name: Test
        if: steps.detect.outputs.has_node == 'true' && inputs.run-tests
        run: npm test --if-present

      - name: Build
        if: steps.detect.outputs.has_node == 'true' && inputs.run-build
        run: npm run build --if-present

      - name: Upload artifact
        if: steps.detect.outputs.has_node == 'true' && inputs.run-build
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: |
            dist
            build
          if-no-files-found: ignore

      - name: Notify n8n (optional)
        if: ${{ success() && secrets.N8N_DEPLOY_HOOK_URL != '' }}
        run: |
          curl -sS -X POST "${{ secrets.N8N_DEPLOY_HOOK_URL }}" \
               -H "Content-Type: application/json" \
               -d '{"repo":"${{ github.repository }}","sha":"${{ github.sha }}","status":"success"}'
